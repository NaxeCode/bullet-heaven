// Generated by Haxe 4.3.3
#ifndef INCLUDED_EnemyGroup
#define INCLUDED_EnemyGroup

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_flixel_group_FlxTypedGroup
#include <flixel/group/FlxTypedGroup.h>
#endif
HX_DECLARE_CLASS0(EnemyGroup)
HX_DECLARE_CLASS1(flixel,FlxBasic)
HX_DECLARE_CLASS2(flixel,group,FlxTypedGroup)
HX_DECLARE_CLASS2(flixel,util,IFlxDestroyable)



class HXCPP_CLASS_ATTRIBUTES EnemyGroup_obj : public  ::flixel::group::FlxTypedGroup_obj
{
	public:
		typedef  ::flixel::group::FlxTypedGroup_obj super;
		typedef EnemyGroup_obj OBJ_;
		EnemyGroup_obj();

	public:
		enum { _hx_ClassId = 0x636bf2b7 };

		void __construct( ::Dynamic __o_max);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="EnemyGroup")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"EnemyGroup"); }
		static ::hx::ObjectPtr< EnemyGroup_obj > __new( ::Dynamic __o_max);
		static ::hx::ObjectPtr< EnemyGroup_obj > __alloc(::hx::Ctx *_hx_ctx, ::Dynamic __o_max);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~EnemyGroup_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("EnemyGroup",f7,cf,a8,4b); }

		int maxEnemies;
		void addEnemyPool();
		::Dynamic addEnemyPool_dyn();

		void update(Float elapsed);

		int tickerSize;
		int ticker;
		void enemyGun();
		::Dynamic enemyGun_dyn();

};


#endif /* INCLUDED_EnemyGroup */ 
